"""Create complete database schema

Revision ID: 7bce887a9187
Revises: 
Create Date: 2025-06-29 17:34:18.094107

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7bce887a9187'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('external_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('billing_email', sa.String(length=255), nullable=True),
    sa.Column('contact_name', sa.String(length=255), nullable=True),
    sa.Column('contact_phone', sa.String(length=50), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id'),
    sa.UniqueConstraint('stripe_customer_id')
    )
    op.create_index(op.f('ix_organization_id'), 'organization', ['id'], unique=False)
    op.create_index(op.f('ix_organization_name'), 'organization', ['name'], unique=False)
    op.create_table('billingmodel',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('model_type', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billingmodel_id'), 'billingmodel', ['id'], unique=False)
    op.create_table('integration_connectors',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('connector_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('connector_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('auth_config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('health_status', sa.String(length=50), nullable=True),
    sa.Column('last_health_check', sa.DateTime(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('connector_id')
    )
    op.create_index(op.f('ix_integration_connectors_id'), 'integration_connectors', ['id'], unique=False)
    op.create_table('integration_streams',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('stream_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('protocol', sa.String(length=50), nullable=False),
    sa.Column('config', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stream_id')
    )
    op.create_index(op.f('ix_integration_streams_id'), 'integration_streams', ['id'], unique=False)
    op.create_table('integration_webhooks',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('endpoint_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('secret', sa.String(length=255), nullable=False),
    sa.Column('event_types', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('retry_config', sa.JSON(), nullable=True),
    sa.Column('last_triggered_at', sa.DateTime(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('endpoint_id')
    )
    op.create_index(op.f('ix_integration_webhooks_id'), 'integration_webhooks', ['id'], unique=False)
    op.create_table('invoice',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(), nullable=False),
    sa.Column('issue_date', sa.DateTime(), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('tax_amount', sa.Float(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('payment_method', sa.String(), nullable=True),
    sa.Column('stripe_invoice_id', sa.String(), nullable=True),
    sa.Column('stripe_checkout_session_id', sa.String(), nullable=True),
    sa.Column('stripe_payment_link', sa.String(), nullable=True),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('invoice_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_index(op.f('ix_invoice_id'), 'invoice', ['id'], unique=False)
    op.create_table('user',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_table('activitybasedconfig',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('price_per_unit', sa.Float(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('unit_type', sa.String(), nullable=False),
    sa.Column('base_agent_fee', sa.Float(), nullable=True),
    sa.Column('volume_pricing_enabled', sa.Boolean(), nullable=True),
    sa.Column('volume_tier_1_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_tier_1_price', sa.Float(), nullable=True),
    sa.Column('volume_tier_2_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_tier_2_price', sa.Float(), nullable=True),
    sa.Column('volume_tier_3_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_tier_3_price', sa.Float(), nullable=True),
    sa.Column('minimum_charge', sa.Float(), nullable=True),
    sa.Column('billing_frequency', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activitybasedconfig_id'), 'activitybasedconfig', ['id'], unique=False)
    op.create_table('agent',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('billing_model_id', sa.Integer(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_active', sa.DateTime(), nullable=True),
    sa.Column('external_id', sa.String(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=True),
    sa.Column('capabilities', sa.JSON(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_id'), 'agent', ['id'], unique=False)
    op.create_table('agentbasedconfig',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('base_agent_fee', sa.Float(), nullable=False),
    sa.Column('billing_frequency', sa.String(), nullable=False),
    sa.Column('setup_fee', sa.Float(), nullable=True),
    sa.Column('volume_discount_enabled', sa.Boolean(), nullable=True),
    sa.Column('volume_discount_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_discount_percentage', sa.Float(), nullable=True),
    sa.Column('agent_tier', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agentbasedconfig_id'), 'agentbasedconfig', ['id'], unique=False)
    op.create_table('commitmenttier',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('tier_name', sa.String(), nullable=False),
    sa.Column('tier_level', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('minimum_workflows_per_month', sa.Integer(), nullable=False),
    sa.Column('minimum_monthly_revenue', sa.Float(), nullable=False),
    sa.Column('included_workflows', sa.Integer(), nullable=False),
    sa.Column('included_workflow_types', sa.String(), nullable=True),
    sa.Column('discount_percentage', sa.Float(), nullable=True),
    sa.Column('platform_fee_discount', sa.Float(), nullable=True),
    sa.Column('commitment_period_months', sa.Integer(), nullable=False),
    sa.Column('overage_rate_multiplier', sa.Float(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_popular', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_commitmenttier_id'), 'commitmenttier', ['id'], unique=False)
    op.create_table('hybridconfig',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('base_fee', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hybridconfig_id'), 'hybridconfig', ['id'], unique=False)
    op.create_table('invoicelineitem',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('item_type', sa.String(), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('reference_type', sa.String(), nullable=True),
    sa.Column('item_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_invoicelineitem_id'), 'invoicelineitem', ['id'], unique=False)
    op.create_table('outcomebasedconfig',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('outcome_name', sa.String(), nullable=False),
    sa.Column('outcome_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('base_platform_fee', sa.Float(), nullable=False),
    sa.Column('platform_fee_frequency', sa.String(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('attribution_window_days', sa.Integer(), nullable=False),
    sa.Column('minimum_attribution_value', sa.Float(), nullable=True),
    sa.Column('requires_verification', sa.Boolean(), nullable=True),
    sa.Column('success_rate_assumption', sa.Float(), nullable=True),
    sa.Column('risk_premium_percentage', sa.Float(), nullable=False),
    sa.Column('monthly_cap_amount', sa.Float(), nullable=True),
    sa.Column('success_bonus_threshold', sa.Float(), nullable=True),
    sa.Column('success_bonus_percentage', sa.Float(), nullable=True),
    sa.Column('tier_1_threshold', sa.Float(), nullable=True),
    sa.Column('tier_1_percentage', sa.Float(), nullable=True),
    sa.Column('tier_2_threshold', sa.Float(), nullable=True),
    sa.Column('tier_2_percentage', sa.Float(), nullable=True),
    sa.Column('tier_3_threshold', sa.Float(), nullable=True),
    sa.Column('tier_3_percentage', sa.Float(), nullable=True),
    sa.Column('billing_frequency', sa.String(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('auto_bill_verified_outcomes', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outcomebasedconfig_id'), 'outcomebasedconfig', ['id'], unique=False)
    op.create_table('workflowbasedconfig',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('base_platform_fee', sa.Float(), nullable=False),
    sa.Column('platform_fee_frequency', sa.String(), nullable=False),
    sa.Column('default_billing_frequency', sa.String(), nullable=False),
    sa.Column('volume_discount_enabled', sa.Boolean(), nullable=True),
    sa.Column('volume_discount_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_discount_percentage', sa.Float(), nullable=True),
    sa.Column('overage_multiplier', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflowbasedconfig_id'), 'workflowbasedconfig', ['id'], unique=False)
    op.create_table('workflowtype',
    sa.Column('billing_model_id', sa.Integer(), nullable=False),
    sa.Column('workflow_name', sa.String(), nullable=False),
    sa.Column('workflow_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('price_per_workflow', sa.Float(), nullable=False),
    sa.Column('estimated_compute_cost', sa.Float(), nullable=True),
    sa.Column('estimated_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('complexity_level', sa.String(), nullable=False),
    sa.Column('expected_roi_multiplier', sa.Float(), nullable=True),
    sa.Column('business_value_category', sa.String(), nullable=True),
    sa.Column('volume_tier_1_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_tier_1_price', sa.Float(), nullable=True),
    sa.Column('volume_tier_2_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_tier_2_price', sa.Float(), nullable=True),
    sa.Column('volume_tier_3_threshold', sa.Integer(), nullable=True),
    sa.Column('volume_tier_3_price', sa.Float(), nullable=True),
    sa.Column('billing_frequency', sa.String(), nullable=True),
    sa.Column('minimum_charge', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['billing_model_id'], ['billingmodel.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflowtype_id'), 'workflowtype', ['id'], unique=False)
    op.create_table('agentactivity',
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('activity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agentactivity_id'), 'agentactivity', ['id'], unique=False)
    op.create_table('agentcost',
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('cost_type', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agentcost_id'), 'agentcost', ['id'], unique=False)
    op.create_table('agentoutcome',
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('outcome_type', sa.String(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agentoutcome_id'), 'agentoutcome', ['id'], unique=False)
    op.create_table('integration_events',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('source_id', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('external_reference_id', sa.String(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('raw_data', sa.JSON(), nullable=False),
    sa.Column('processed_data', sa.JSON(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=True),
    sa.Column('processing_attempts', sa.Integer(), nullable=True),
    sa.Column('last_processing_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_integration_events_id'), 'integration_events', ['id'], unique=False)
    op.create_table('outcomemetric',
    sa.Column('outcome_config_id', sa.Integer(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('outcome_value', sa.Float(), nullable=False),
    sa.Column('outcome_currency', sa.String(), nullable=False),
    sa.Column('attribution_start_date', sa.DateTime(), nullable=False),
    sa.Column('attribution_end_date', sa.DateTime(), nullable=False),
    sa.Column('verification_status', sa.String(), nullable=False),
    sa.Column('verification_notes', sa.String(), nullable=True),
    sa.Column('verified_by', sa.String(), nullable=True),
    sa.Column('verified_at', sa.DateTime(), nullable=True),
    sa.Column('calculated_fee', sa.Float(), nullable=False),
    sa.Column('tier_applied', sa.String(), nullable=True),
    sa.Column('bonus_applied', sa.Float(), nullable=True),
    sa.Column('billing_status', sa.String(), nullable=False),
    sa.Column('billed_at', sa.DateTime(), nullable=True),
    sa.Column('billing_period', sa.String(), nullable=True),
    sa.Column('outcome_data', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['outcome_config_id'], ['outcomebasedconfig.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outcomemetric_id'), 'outcomemetric', ['id'], unique=False)
    op.create_table('outcomeverificationrule',
    sa.Column('outcome_config_id', sa.Integer(), nullable=False),
    sa.Column('rule_name', sa.String(), nullable=False),
    sa.Column('rule_type', sa.String(), nullable=False),
    sa.Column('verification_method', sa.String(), nullable=False),
    sa.Column('api_endpoint', sa.String(), nullable=True),
    sa.Column('verification_threshold', sa.Float(), nullable=True),
    sa.Column('rule_config', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['outcome_config_id'], ['outcomebasedconfig.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outcomeverificationrule_id'), 'outcomeverificationrule', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_outcomeverificationrule_id'), table_name='outcomeverificationrule')
    op.drop_table('outcomeverificationrule')
    op.drop_index(op.f('ix_outcomemetric_id'), table_name='outcomemetric')
    op.drop_table('outcomemetric')
    op.drop_index(op.f('ix_integration_events_id'), table_name='integration_events')
    op.drop_table('integration_events')
    op.drop_index(op.f('ix_agentoutcome_id'), table_name='agentoutcome')
    op.drop_table('agentoutcome')
    op.drop_index(op.f('ix_agentcost_id'), table_name='agentcost')
    op.drop_table('agentcost')
    op.drop_index(op.f('ix_agentactivity_id'), table_name='agentactivity')
    op.drop_table('agentactivity')
    op.drop_index(op.f('ix_workflowtype_id'), table_name='workflowtype')
    op.drop_table('workflowtype')
    op.drop_index(op.f('ix_workflowbasedconfig_id'), table_name='workflowbasedconfig')
    op.drop_table('workflowbasedconfig')
    op.drop_index(op.f('ix_outcomebasedconfig_id'), table_name='outcomebasedconfig')
    op.drop_table('outcomebasedconfig')
    op.drop_index(op.f('ix_invoicelineitem_id'), table_name='invoicelineitem')
    op.drop_table('invoicelineitem')
    op.drop_index(op.f('ix_hybridconfig_id'), table_name='hybridconfig')
    op.drop_table('hybridconfig')
    op.drop_index(op.f('ix_commitmenttier_id'), table_name='commitmenttier')
    op.drop_table('commitmenttier')
    op.drop_index(op.f('ix_agentbasedconfig_id'), table_name='agentbasedconfig')
    op.drop_table('agentbasedconfig')
    op.drop_index(op.f('ix_agent_id'), table_name='agent')
    op.drop_table('agent')
    op.drop_index(op.f('ix_activitybasedconfig_id'), table_name='activitybasedconfig')
    op.drop_table('activitybasedconfig')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_invoice_id'), table_name='invoice')
    op.drop_table('invoice')
    op.drop_index(op.f('ix_integration_webhooks_id'), table_name='integration_webhooks')
    op.drop_table('integration_webhooks')
    op.drop_index(op.f('ix_integration_streams_id'), table_name='integration_streams')
    op.drop_table('integration_streams')
    op.drop_index(op.f('ix_integration_connectors_id'), table_name='integration_connectors')
    op.drop_table('integration_connectors')
    op.drop_index(op.f('ix_billingmodel_id'), table_name='billingmodel')
    op.drop_table('billingmodel')
    op.drop_index(op.f('ix_organization_name'), table_name='organization')
    op.drop_index(op.f('ix_organization_id'), table_name='organization')
    op.drop_table('organization')
    # ### end Alembic commands ###
