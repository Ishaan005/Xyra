"""Create value receipt tables

Revision ID: 947ebf5f1bb2
Revises: 2f9630c0d585
Create Date: 2025-07-15 17:47:11.014463

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '947ebf5f1bb2'
down_revision: Union[str, None] = '2f9630c0d585'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('humanequivalentbenchmark',
    sa.Column('industry', sa.String(), nullable=False),
    sa.Column('role_type', sa.String(), nullable=False),
    sa.Column('task_category', sa.String(), nullable=False),
    sa.Column('hourly_rate_min', sa.Float(), nullable=False),
    sa.Column('hourly_rate_max', sa.Float(), nullable=False),
    sa.Column('hourly_rate_avg', sa.Float(), nullable=False),
    sa.Column('tasks_per_hour', sa.Float(), nullable=False),
    sa.Column('error_rate_percentage', sa.Float(), nullable=False),
    sa.Column('quality_score', sa.Float(), nullable=False),
    sa.Column('benefits_percentage', sa.Float(), nullable=False),
    sa.Column('training_cost_per_person', sa.Float(), nullable=False),
    sa.Column('onboarding_time_days', sa.Float(), nullable=False),
    sa.Column('geographic_region', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('benchmark_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_humanequivalentbenchmark_id'), 'humanequivalentbenchmark', ['id'], unique=False)
    op.create_table('valuereceipt',
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('billing_period', sa.String(), nullable=False),
    sa.Column('total_ai_cost', sa.Float(), nullable=False),
    sa.Column('total_human_equivalent_cost', sa.Float(), nullable=False),
    sa.Column('total_value_generated', sa.Float(), nullable=False),
    sa.Column('roi_multiple', sa.Float(), nullable=False),
    sa.Column('cost_savings_percentage', sa.Float(), nullable=False),
    sa.Column('agent_based_data', sa.JSON(), nullable=True),
    sa.Column('activity_based_data', sa.JSON(), nullable=True),
    sa.Column('outcome_based_data', sa.JSON(), nullable=True),
    sa.Column('workflow_based_data', sa.JSON(), nullable=True),
    sa.Column('total_time_saved_hours', sa.Float(), nullable=True),
    sa.Column('total_human_fte_equivalent', sa.Float(), nullable=True),
    sa.Column('total_efficiency_gain_percentage', sa.Float(), nullable=True),
    sa.Column('calculation_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_valuereceipt_id'), 'valuereceipt', ['id'], unique=False)
    op.create_table('valuemetric',
    sa.Column('value_receipt_id', sa.Integer(), nullable=False),
    sa.Column('metric_type', sa.String(), nullable=False),
    sa.Column('metric_category', sa.String(), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=True),
    sa.Column('ai_cost', sa.Float(), nullable=False),
    sa.Column('human_equivalent_cost', sa.Float(), nullable=False),
    sa.Column('value_generated', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('time_saved_hours', sa.Float(), nullable=True),
    sa.Column('quality_improvement_percentage', sa.Float(), nullable=True),
    sa.Column('speed_improvement_percentage', sa.Float(), nullable=True),
    sa.Column('human_time_equivalent_hours', sa.Float(), nullable=True),
    sa.Column('human_success_rate', sa.Float(), nullable=True),
    sa.Column('ai_success_rate', sa.Float(), nullable=True),
    sa.Column('metric_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ),
    sa.ForeignKeyConstraint(['value_receipt_id'], ['valuereceipt.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_valuemetric_id'), 'valuemetric', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_valuemetric_id'), table_name='valuemetric')
    op.drop_table('valuemetric')
    op.drop_index(op.f('ix_valuereceipt_id'), table_name='valuereceipt')
    op.drop_table('valuereceipt')
    op.drop_index(op.f('ix_humanequivalentbenchmark_id'), table_name='humanequivalentbenchmark')
    op.drop_table('humanequivalentbenchmark')
    # ### end Alembic commands ###
